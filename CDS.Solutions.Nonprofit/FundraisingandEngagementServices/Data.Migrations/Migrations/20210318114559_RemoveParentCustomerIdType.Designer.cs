// <auto-generated />
using System;
using FundraisingandEngagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FundraisingandEngagement.Data.Migrations
{
    [DbContext(typeof(PaymentContext))]
    [Migration("20210318114559_RemoveParentCustomerIdType")]
    partial class RemoveParentCustomerIdType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Account", b =>
                {
                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("Address1_AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Address1_AddressTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("Address1_City")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address1_Country")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address1_County")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<float?>("Address1_Latitude")
                        .HasColumnType("real");

                    b.Property<string>("Address1_Line1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address1_Line2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address1_Line3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<float?>("Address1_Longitude")
                        .HasColumnType("real");

                    b.Property<string>("Address1_Name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Address1_PostOfficeBox")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address1_PostalCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address1_StateOrProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Address2_AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Address2_AddressTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("Address2_City")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address2_Country")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address2_County")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<float?>("Address2_Latitude")
                        .HasColumnType("real");

                    b.Property<string>("Address2_Line1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address2_Line2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address2_Line3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<float?>("Address2_Longitude")
                        .HasColumnType("real");

                    b.Property<string>("Address2_Name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Address2_PostOfficeBox")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address2_PostalCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address2_StateOrProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DoNotBulkEMail")
                        .HasColumnType("bit");

                    b.Property<bool?>("DoNotBulkPostalMail")
                        .HasColumnType("bit");

                    b.Property<bool?>("DoNotEmail")
                        .HasColumnType("bit");

                    b.Property<bool?>("DoNotFax")
                        .HasColumnType("bit");

                    b.Property<bool?>("DoNotPhone")
                        .HasColumnType("bit");

                    b.Property<bool?>("DoNotPostalMail")
                        .HasColumnType("bit");

                    b.Property<bool?>("DoNotSendMM")
                        .HasColumnType("bit");

                    b.Property<string>("EmailAddress1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EmailAddress2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EmailAddress3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Merged")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("OwningBusinessUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Telephone1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telephone2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telephone3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("TransactionCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WebSiteURL")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("msnfp_Anonymity")
                        .HasColumnType("int");

                    b.Property<int?>("msnfp_Count_LifetimeTransactions")
                        .HasColumnType("int");

                    b.Property<Guid?>("msnfp_GivingLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("msnfp_LastEventPackageDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("msnfp_LastEventPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("msnfp_LastTransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("msnfp_LastTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("msnfp_PreferredLanguageCode")
                        .HasColumnType("int");

                    b.Property<Guid?>("msnfp_PrimaryMembershipId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("msnfp_ReceiptPreferenceCode")
                        .HasColumnType("int");

                    b.Property<decimal?>("msnfp_Sum_LifetimeTransactions")
                        .HasColumnType("money");

                    b.Property<int?>("msnfp_Telephone1TypeCode")
                        .HasColumnType("int");

                    b.Property<int?>("msnfp_Telephone2TypeCode")
                        .HasColumnType("int");

                    b.Property<int?>("msnfp_Telephone3TypeCode")
                        .HasColumnType("int");

                    b.Property<bool?>("msnfp_Vip")
                        .HasColumnType("bit");

                    b.Property<int?>("msnfp_accounttype")
                        .HasColumnType("int");

                    b.Property<int?>("msnfp_classificationcode")
                        .HasColumnType("int");

                    b.Property<bool?>("msnfp_issolicitor")
                        .HasColumnType("bit");

                    b.Property<decimal?>("msnfp_lifetimegivingsum")
                        .HasColumnType("money");

                    b.Property<bool?>("msnfp_signup")
                        .HasColumnType("bit");

                    b.Property<bool?>("msnfp_solicitcode")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("msnfp_solicitdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("msnfp_vendorid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("msnfp_year0_category")
                        .HasColumnType("int");

                    b.Property<decimal?>("msnfp_year0_giving")
                        .HasColumnType("money");

                    b.Property<int?>("msnfp_year1_category")
                        .HasColumnType("int");

                    b.Property<decimal?>("msnfp_year1_giving")
                        .HasColumnType("money");

                    b.Property<int?>("msnfp_year2_category")
                        .HasColumnType("int");

                    b.Property<decimal?>("msnfp_year2_giving")
                        .HasColumnType("money");

                    b.Property<int?>("msnfp_year3_category")
                        .HasColumnType("int");

                    b.Property<decimal?>("msnfp_year3_giving")
                        .HasColumnType("money");

                    b.Property<int?>("msnfp_year4_category")
                        .HasColumnType("int");

                    b.Property<decimal?>("msnfp_year4_giving")
                        .HasColumnType("money");

                    b.HasKey("AccountId");

                    b.HasIndex("TransactionCurrencyId");

                    b.HasIndex("msnfp_LastEventPackageId");

                    b.HasIndex("msnfp_LastTransactionId");

                    b.HasIndex("msnfp_PrimaryMembershipId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.BankRun", b =>
                {
                    b.Property<Guid>("BankRunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountToCreditId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BankRunStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateToBeProcessed")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FileCreationNumber")
                        .HasColumnType("int");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PaymentProcessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BankRunId");

                    b.ToTable("BankRun");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.BankRunSchedule", b =>
                {
                    b.Property<Guid>("BankRunScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BankRunId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PaymentScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BankRunScheduleId");

                    b.ToTable("BankRunSchedule");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Configuration", b =>
                {
                    b.Property<Guid>("ConfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AddressAuth1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddressAuth2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AzureWebApiUrl")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AzureWebApp")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("BankRunPregeneratedBy")
                        .HasColumnType("int");

                    b.Property<string>("CharityTitle")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DefaultConfiguration")
                        .HasColumnType("bit");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("PaymentProcessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ScheMaxRetries")
                        .HasColumnType("int");

                    b.Property<int?>("ScheRecurrenceStart")
                        .HasColumnType("int");

                    b.Property<int?>("ScheRetryinterval")
                        .HasColumnType("int");

                    b.Property<bool>("ShouldSyncResponse")
                        .HasColumnType("bit");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TeamOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ConfigurationId");

                    b.HasIndex("PaymentProcessorId");

                    b.ToTable("Configuration");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Contact", b =>
                {
                    b.Property<Guid>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("Address1_AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Address1_AddressTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("Address1_City")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address1_Country")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address1_County")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<float?>("Address1_Latitude")
                        .HasColumnType("real");

                    b.Property<string>("Address1_Line1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address1_Line2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address1_Line3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<float?>("Address1_Longitude")
                        .HasColumnType("real");

                    b.Property<string>("Address1_Name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Address1_PostOfficeBox")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address1_PostalCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address1_StateOrProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Address2_AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Address2_AddressTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("Address2_City")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address2_Country")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address2_County")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<float?>("Address2_Latitude")
                        .HasColumnType("real");

                    b.Property<string>("Address2_Line1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address2_Line2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address2_Line3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<float?>("Address2_Longitude")
                        .HasColumnType("real");

                    b.Property<string>("Address2_Name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Address2_PostOfficeBox")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address2_PostalCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address2_StateOrProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Address3_AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Address3_AddressTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("Address3_City")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address3_Country")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address3_County")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<float?>("Address3_Latitude")
                        .HasColumnType("real");

                    b.Property<string>("Address3_Line1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address3_Line2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address3_Line3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<float?>("Address3_Longitude")
                        .HasColumnType("real");

                    b.Property<string>("Address3_Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address3_PostOfficeBox")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address3_PostalCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address3_StateOrProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DoNotBulkEMail")
                        .HasColumnType("bit");

                    b.Property<bool?>("DoNotBulkPostalMail")
                        .HasColumnType("bit");

                    b.Property<bool?>("DoNotEmail")
                        .HasColumnType("bit");

                    b.Property<bool?>("DoNotFax")
                        .HasColumnType("bit");

                    b.Property<bool?>("DoNotPhone")
                        .HasColumnType("bit");

                    b.Property<bool?>("DoNotPostalMail")
                        .HasColumnType("bit");

                    b.Property<bool?>("DoNotSendMM")
                        .HasColumnType("bit");

                    b.Property<string>("EmailAddress1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EmailAddress2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EmailAddress3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("GenderCode")
                        .HasColumnType("int");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Merged")
                        .HasColumnType("bit");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("OwningBusinessUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentCustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Salutation")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<string>("Suffix")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Telephone1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telephone2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telephone3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("TransactionCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("msnfp_Age")
                        .HasColumnType("int");

                    b.Property<int?>("msnfp_Anonymity")
                        .HasColumnType("int");

                    b.Property<int?>("msnfp_Count_LifetimeTransactions")
                        .HasColumnType("int");

                    b.Property<Guid?>("msnfp_GivingLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("msnfp_LastEventPackageDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("msnfp_LastEventPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("msnfp_LastTransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("msnfp_LastTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("msnfp_PreferredLanguageCode")
                        .HasColumnType("int");

                    b.Property<Guid?>("msnfp_PrimaryMembershipId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("msnfp_ReceiptPreferenceCode")
                        .HasColumnType("int");

                    b.Property<decimal?>("msnfp_Sum_LifetimeTransactions")
                        .HasColumnType("money");

                    b.Property<DateTime?>("msnfp_UpcomingBirthday")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("msnfp_Vip")
                        .HasColumnType("bit");

                    b.Property<Guid?>("msnfp_householdid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("msnfp_lifetimegivingsum")
                        .HasColumnType("money");

                    b.Property<int?>("msnfp_telephone1typecode")
                        .HasColumnType("int");

                    b.Property<int?>("msnfp_telephone2typecode")
                        .HasColumnType("int");

                    b.Property<int?>("msnfp_telephone3typecode")
                        .HasColumnType("int");

                    b.Property<int?>("msnfp_year0_category")
                        .HasColumnType("int");

                    b.Property<decimal?>("msnfp_year0_giving")
                        .HasColumnType("money");

                    b.Property<int?>("msnfp_year1_category")
                        .HasColumnType("int");

                    b.Property<decimal?>("msnfp_year1_giving")
                        .HasColumnType("money");

                    b.Property<int?>("msnfp_year2_category")
                        .HasColumnType("int");

                    b.Property<decimal?>("msnfp_year2_giving")
                        .HasColumnType("money");

                    b.Property<int?>("msnfp_year3_category")
                        .HasColumnType("int");

                    b.Property<decimal?>("msnfp_year3_giving")
                        .HasColumnType("money");

                    b.Property<int?>("msnfp_year4_category")
                        .HasColumnType("int");

                    b.Property<decimal?>("msnfp_year4_giving")
                        .HasColumnType("money");

                    b.HasKey("ContactId");

                    b.HasIndex("TransactionCurrencyId");

                    b.HasIndex("msnfp_LastEventPackageId");

                    b.HasIndex("msnfp_LastTransactionId");

                    b.HasIndex("msnfp_PrimaryMembershipId");

                    b.HasIndex("msnfp_householdid");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.DataverseSyncToken", b =>
                {
                    b.Property<string>("EntityLogicalName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("TokenValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("EntityLogicalName");

                    b.ToTable("DataverseSyncToken");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Designation", b =>
                {
                    b.Property<Guid>("DesignationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(160)")
                        .HasMaxLength(160);

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnName("StatusReason")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DesignationId");

                    b.ToTable("Designation");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.DonorCommitment", b =>
                {
                    b.Property<Guid>("DonorCommitmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("AppealId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BookDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CustomerIdType")
                        .HasColumnType("int");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("TotalAmountBalance")
                        .HasColumnType("money");

                    b.HasKey("DonorCommitmentId");

                    b.ToTable("DonorCommitment");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Event", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<Guid?>("AppealId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<Guid?>("ConfigurationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Coordinator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CostAmount")
                        .HasColumnType("money");

                    b.Property<int?>("CostPercentage")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DesignationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("EventTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("ExternalUrl")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool?>("ForceRedirect")
                        .HasColumnType("bit");

                    b.Property<int?>("ForceRedirectTiming")
                        .HasColumnType("int");

                    b.Property<bool?>("FreeEvent")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Goal")
                        .HasColumnType("money");

                    b.Property<string>("HomePageUrl")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("InvoiceMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelLanguageCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LargeImage")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastPublished")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MadeVisible")
                        .HasColumnType("datetime2");

                    b.Property<string>("MapCity")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MapCountry")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MapLine1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MapLine2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MapLine3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MapPostalCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MapStateOrProvince")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("PackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentNotice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PaymentProcessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ProposedEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProposedStart")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Removed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemovedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("SelectCurrency")
                        .HasColumnType("bit");

                    b.Property<bool?>("SetAcceptNotice")
                        .HasColumnType("bit");

                    b.Property<bool?>("SetCoverCosts")
                        .HasColumnType("bit");

                    b.Property<bool?>("SetSignUp")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowApple")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowCompany")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowCoverCosts")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowCreditCard")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowGiftAid")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowGoogle")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowInvoice")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowMap")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowPayPal")
                        .HasColumnType("bit");

                    b.Property<string>("SmallImage")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Sponsorship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TeamOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ThankYou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeAndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TransactionCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VenueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("EventId");

                    b.HasIndex("ConfigurationId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("PaymentProcessorId");

                    b.HasIndex("TransactionCurrencyId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.EventDisclaimer", b =>
                {
                    b.Property<Guid>("EventDisclaimerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EventDisclaimerId");

                    b.HasIndex("EventId");

                    b.ToTable("EventDisclaimer");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.EventDonation", b =>
                {
                    b.Property<Guid>("EventDonationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransactionCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EventDonationId");

                    b.HasIndex("EventId");

                    b.HasIndex("TransactionCurrencyId");

                    b.ToTable("EventDonation");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.EventPackage", b =>
                {
                    b.Property<Guid>("EventPackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountNonReceiptable")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountReceipted")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountTax")
                        .HasColumnType("money");

                    b.Property<Guid?>("Appealid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BillingCity")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingCountry")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingLine1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingLine2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingLine3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingPostalCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingStateorProvince")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CcBrandCode")
                        .HasColumnType("int");

                    b.Property<string>("ChequeNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ChequeWireDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ConfigurationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConstituentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CustomerIdType")
                        .HasColumnType("int");

                    b.Property<string>("DataEntryReference")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("DataEntrySource")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRefunded")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emailaddress1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("InvoiceIdentifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("PackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PaymentmethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("RefAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("RefAmountNonreceiptable")
                        .HasColumnType("money");

                    b.Property<decimal?>("RefAmountReceipted")
                        .HasColumnType("money");

                    b.Property<decimal?>("RefAmountTax")
                        .HasColumnType("money");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<int?>("SumDonations")
                        .HasColumnType("int");

                    b.Property<int?>("SumProducts")
                        .HasColumnType("int");

                    b.Property<int?>("SumRegistrations")
                        .HasColumnType("int");

                    b.Property<int?>("SumSponsorships")
                        .HasColumnType("int");

                    b.Property<int?>("SumTickets")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Telephone1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telephone2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ThirdPartyReceipt")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("TransactionCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TransactionFraudCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TransactionIdentifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TransactionResult")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("ValDonations")
                        .HasColumnType("money");

                    b.Property<decimal?>("ValProducts")
                        .HasColumnType("money");

                    b.Property<decimal?>("ValSponsorships")
                        .HasColumnType("money");

                    b.Property<decimal?>("ValTickets")
                        .HasColumnType("money");

                    b.HasKey("EventPackageId");

                    b.HasIndex("ConfigurationId");

                    b.HasIndex("EventId");

                    b.HasIndex("PaymentmethodId");

                    b.HasIndex("TransactionCurrencyId");

                    b.ToTable("EventPackage");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.EventPreference", b =>
                {
                    b.Property<Guid>("EventPreferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("PreferenceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PreferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EventPreferenceId");

                    b.HasIndex("PreferenceCategoryId");

                    b.ToTable("EventPreference");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.EventProduct", b =>
                {
                    b.Property<Guid>("EventProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountNonReceiptable")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountReceipted")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountTax")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxProducts")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool?>("RestrictPerRegistration")
                        .HasColumnType("bit");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<decimal?>("SumSold")
                        .HasColumnType("money");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransactionCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ValAvailable")
                        .HasColumnType("int");

                    b.Property<int?>("ValSold")
                        .HasColumnType("int");

                    b.HasKey("EventProductId");

                    b.HasIndex("EventId");

                    b.HasIndex("TransactionCurrencyId");

                    b.ToTable("EventProduct");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.EventSponsor", b =>
                {
                    b.Property<Guid>("EventSponsorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LargeImage")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SponsorTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransactionCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EventSponsorId");

                    b.HasIndex("EventId");

                    b.HasIndex("TransactionCurrencyId");

                    b.ToTable("EventSponsor");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.EventSponsorship", b =>
                {
                    b.Property<Guid>("EventSponsorshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Advantage")
                        .HasColumnType("money");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountNonReceiptable")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountReceipted")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("FromAmount")
                        .HasColumnType("money");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<decimal?>("SumSold")
                        .HasColumnType("money");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransactionCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ValAvailable")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValSold")
                        .HasColumnType("money");

                    b.HasKey("EventSponsorshipId");

                    b.HasIndex("EventId");

                    b.HasIndex("TransactionCurrencyId");

                    b.ToTable("EventSponsorship");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.EventTable", b =>
                {
                    b.Property<Guid>("EventTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventTicketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TableCapacity")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TableNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("EventTableId");

                    b.ToTable("EventTable");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.EventTicket", b =>
                {
                    b.Property<Guid>("EvenTicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountNonReceiptable")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountReceipted")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountTax")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("MaxSpots")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("RegistrationsPerTicket")
                        .HasColumnType("int");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<int?>("SumAvailable")
                        .HasColumnType("int");

                    b.Property<int?>("SumRegistrationSold")
                        .HasColumnType("int");

                    b.Property<int?>("SumRegistrationsAvailable")
                        .HasColumnType("int");

                    b.Property<int?>("SumSold")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Tickets")
                        .HasColumnType("int");

                    b.Property<Guid?>("TransactionCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ValTickets")
                        .HasColumnType("money");

                    b.HasKey("EvenTicketId");

                    b.HasIndex("EventId");

                    b.HasIndex("TransactionCurrencyId");

                    b.ToTable("EventTicket");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.GiftAidDeclaration", b =>
                {
                    b.Property<Guid>("GiftAidDeclarationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CustomerIdType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeclarationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeclarationDelivered")
                        .HasColumnType("int")
                        .HasMaxLength(100);

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GiftAidDeclarationHtml")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("GiftAidDeclarationId");

                    b.ToTable("GiftAidDeclaration");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Membership", b =>
                {
                    b.Property<Guid>("MembershipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MembershipCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("Primary")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MembershipId");

                    b.HasIndex("MembershipCategoryId");

                    b.ToTable("Membership");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.MembershipCategory", b =>
                {
                    b.Property<Guid>("MembershipCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountMembership")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountTax")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GoodWillDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MembershipDuration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("RenewalDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransactionCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MembershipCategoryId");

                    b.HasIndex("TransactionCurrencyId");

                    b.ToTable("MembershipCategory");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.MembershipGroup", b =>
                {
                    b.Property<Guid>("MembershipGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MembershipGroupId");

                    b.ToTable("MembershipGroup");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.MembershipOrder", b =>
                {
                    b.Property<Guid>("MembershipOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FromMembershipCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ToMembershipGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MembershipOrderId");

                    b.HasIndex("FromMembershipCategoryId");

                    b.HasIndex("ToMembershipGroupId");

                    b.ToTable("MembershipOrder");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Note", b =>
                {
                    b.Property<Guid>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FileSize")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDocument")
                        .HasColumnType("bit");

                    b.Property<string>("MimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjectType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RegardingObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NoteId");

                    b.HasIndex("RegardingObjectId");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountBalance")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountRefunded")
                        .HasColumnType("money");

                    b.Property<int?>("CcBrandCodePayment")
                        .HasColumnType("int");

                    b.Property<string>("ChequeNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("ConfigurationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateRefunded")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EventPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InvoiceIdentifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("PaymentMethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PaymentProcessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PaymentType")
                        .HasColumnType("int");

                    b.Property<Guid?>("ResponseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionFraudCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TransactionIdentifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TransactionResult")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("PaymentId");

                    b.HasIndex("EventPackageId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("PaymentProcessorId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.PaymentMethod", b =>
                {
                    b.Property<Guid>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AbaFinancialInstitutionName")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("AuthToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankActNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BankActRtNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("BankTypeCode")
                        .HasColumnType("int");

                    b.Property<string>("BillingCity")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingCountry")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingLine1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingLine2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingLine3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingPostalCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingStateorProvince")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("CcBrandCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CcExpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CcExpMmYy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CcLast4")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CustomerIdType")
                        .HasColumnType("int");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emailaddress1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("IsReusable")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NameAsItAppearsOnTheAccount")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NameOnFile")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("PaymentProcessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<string>("StripeCustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Telephone1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TransactionFraudCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TransactionIdentifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TransactionResult")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("PaymentMethodId");

                    b.HasIndex("PaymentProcessorId");

                    b.ToTable("PaymentMethod");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.PaymentProcessor", b =>
                {
                    b.Property<Guid>("PaymentProcessorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AbaRemitterName")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<string>("AbaUserName")
                        .HasColumnType("nvarchar(26)")
                        .HasMaxLength(26);

                    b.Property<string>("AbaUserNumber")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<string>("AdyenCheckoutUrl")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AdyenMerchantAccount")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AdyenPassword")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AdyenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdyenUsername")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("BankRunFileFormat")
                        .HasColumnType("int");

                    b.Property<string>("BmoOriginatorId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IatsAgentCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("IatsPassword")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MonerisApiKey")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MonerisStoreId")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("MonerisTestMode")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OriginatorLongName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("OriginatorShortName")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("PaymentGatewayType")
                        .HasColumnType("int");

                    b.Property<string>("ScotiabankCustomerNumber")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<string>("StripeServiceKey")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorldPayClientKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorldPayServiceKey")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("PaymentProcessorId");

                    b.ToTable("PaymentProcessor");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.PaymentSchedule", b =>
                {
                    b.Property<Guid>("PaymentScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("AmountMembership")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountNonReceiptable")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountOfFailures")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountReceipted")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountTax")
                        .HasColumnType("money");

                    b.Property<int?>("Anonymity")
                        .HasColumnType("int");

                    b.Property<Guid?>("AppealId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Appraiser")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingCity")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingCountry")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingLine1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingLine2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingLine3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingPostalCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingStateorProvince")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("BookDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CancelationCode")
                        .HasColumnType("int");

                    b.Property<string>("CancellationNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CancelledOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CcBrandCode")
                        .HasColumnType("int");

                    b.Property<bool?>("ChargeonCreate")
                        .HasColumnType("bit");

                    b.Property<int?>("ConcurrentFailures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ConfigurationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConstituentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CustomerIdType")
                        .HasColumnType("int");

                    b.Property<string>("DataEntryReference")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("DataEntrySource")
                        .HasColumnType("int");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DepositDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DesignationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("EndonDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EventPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("FirstPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Frequency")
                        .HasColumnType("int");

                    b.Property<int?>("FrequencyInterval")
                        .HasColumnType("int");

                    b.Property<int?>("FrequencyStartCode")
                        .HasColumnType("int");

                    b.Property<int?>("GaDeliveryCode")
                        .HasColumnType("int");

                    b.Property<Guid?>("GiftBatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InvoiceIdentifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MembershipCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MembershipId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("NextPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NumberOfFailures")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfSuccesses")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("OriginatingCampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PaymentMethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PaymentProcessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PaymentTypeCode")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiptPreferenceCode")
                        .HasColumnType("int");

                    b.Property<decimal?>("RecurringAmount")
                        .HasColumnType("money");

                    b.Property<int?>("ScheduleTypeCode")
                        .HasColumnType("int");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TaxReceiptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telephone1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telephone2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<Guid?>("TransactionBatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TransactionCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TransactionDescription")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TransactionFraudCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TransactionIdentifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TransactionResult")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TributeAcknowledgement")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("TributeCode")
                        .HasColumnType("int");

                    b.Property<Guid?>("TributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TributeMessage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentScheduleId");

                    b.HasIndex("ConfigurationId");

                    b.HasIndex("EventId");

                    b.HasIndex("EventPackageId");

                    b.HasIndex("MembershipCategoryId");

                    b.HasIndex("MembershipId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("PaymentProcessorId");

                    b.HasIndex("TransactionCurrencyId");

                    b.ToTable("PaymentSchedule");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Preference", b =>
                {
                    b.Property<Guid>("preferenceid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<Guid?>("preferencecategoryid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("preferenceid");

                    b.HasIndex("preferencecategoryid");

                    b.ToTable("Preference");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.PreferenceCategory", b =>
                {
                    b.Property<Guid>("preferencecategoryid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("CategoryCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.HasKey("preferencecategoryid");

                    b.ToTable("PreferenceCategory");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountNonreceiptable")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountReceipted")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountTax")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CustomerIdType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EventPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EventProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransactionCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductId");

                    b.HasIndex("EventId");

                    b.HasIndex("EventPackageId");

                    b.HasIndex("TransactionCurrencyId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Receipt", b =>
                {
                    b.Property<Guid>("ReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountNonReceiptable")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountReceipted")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CustomerIdType")
                        .HasColumnType("int");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeliveryCode")
                        .HasColumnType("int");

                    b.Property<int?>("EmailDeliveryStatusCode")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExpectedTaxCredit")
                        .HasColumnType("money");

                    b.Property<double?>("GeneratedorPrinted")
                        .HasColumnType("float");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastDonationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PaymentScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PreferredLanguageCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Printed")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReceiptGeneration")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReceiptIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceiptNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("ReceiptStackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReceiptStatus")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("ReplacesReceiptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TransactionCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("TransactionCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReceiptId");

                    b.HasIndex("PaymentScheduleId");

                    b.HasIndex("ReceiptStackId");

                    b.HasIndex("TransactionCurrencyId");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.ReceiptLog", b =>
                {
                    b.Property<Guid>("ReceiptLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntryBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EntryReason")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ReceiptNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("ReceiptStackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReceiptLogId");

                    b.HasIndex("ReceiptStackId");

                    b.ToTable("ReceiptLog");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.ReceiptStack", b =>
                {
                    b.Property<Guid>("ReceiptStackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("ConfigurationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("CurrentRange")
                        .HasColumnType("float");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("NumberRange")
                        .HasColumnType("int");

                    b.Property<Guid?>("OwningBusinessUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ReceiptYear")
                        .HasColumnType("int");

                    b.Property<double?>("StartingRange")
                        .HasColumnType("float");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReceiptStackId");

                    b.HasIndex("ConfigurationId");

                    b.ToTable("ReceiptStack");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Refund", b =>
                {
                    b.Property<Guid>("RefundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountMembership")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountNonReceiptable")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountReceipted")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountTax")
                        .HasColumnType("money");

                    b.Property<DateTime?>("BookDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChequeNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CustomerIdType")
                        .HasColumnType("int");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("RefAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("RefAmountMembership")
                        .HasColumnType("money");

                    b.Property<decimal?>("RefAmountNonreceiptable")
                        .HasColumnType("money");

                    b.Property<decimal?>("RefAmountReceipted")
                        .HasColumnType("money");

                    b.Property<decimal?>("RefAmountTax")
                        .HasColumnType("money");

                    b.Property<int?>("RefundTypeCode")
                        .HasColumnType("int");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransactionCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TransactionIdentifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TransactionResult")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("RefundId");

                    b.HasIndex("TransactionCurrencyId");

                    b.HasIndex("TransactionId");

                    b.ToTable("Refund");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Registration", b =>
                {
                    b.Property<Guid>("RegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address_City")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address_Country")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address_Line1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address_Line2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address_PostalCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Address_Province")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("BillingCity")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingCountry")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingLine1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingLine2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingLine3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingPostalCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingStateorProvince")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CustomerIdType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Emailaddress1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EventPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EventTicketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("GroupNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Team")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telephone1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("TicketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TransactionCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RegistrationId");

                    b.HasIndex("EventId");

                    b.HasIndex("EventPackageId");

                    b.HasIndex("EventTicketId");

                    b.HasIndex("TicketId");

                    b.HasIndex("TransactionCurrencyId");

                    b.ToTable("Registration");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.RegistrationPreference", b =>
                {
                    b.Property<Guid>("RegistrationPreferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<Guid>("RegistrationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("eventpreference")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RegistrationPreferenceId");

                    b.ToTable("RegistrationPreference");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Response", b =>
                {
                    b.Property<Guid>("ResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("PaymentScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RegistrationPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ResponseId");

                    b.HasIndex("PaymentScheduleId");

                    b.HasIndex("RegistrationPackageId");

                    b.HasIndex("TransactionId");

                    b.ToTable("Response");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Sponsorship", b =>
                {
                    b.Property<Guid>("SponsorshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountNonreceiptable")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountReceipted")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountTax")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CustomerIdType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EventPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EventSponsorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EventSponsorshipId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SponsorshipId");

                    b.HasIndex("EventId");

                    b.HasIndex("EventPackageId");

                    b.HasIndex("EventSponsorId");

                    b.HasIndex("EventSponsorshipId");

                    b.ToTable("Sponsorship");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.SyncLog", b =>
                {
                    b.Property<Guid>("SyncExceptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExceptionMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PaymentEntityPK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SyncExceptionId");

                    b.HasIndex("TransactionId");

                    b.ToTable("SyncException");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Ticket", b =>
                {
                    b.Property<Guid>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountNonreceiptable")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountReceipted")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountTax")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CustomerIdType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EventPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EventTicketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("RegistrationsPerTicket")
                        .HasColumnType("int");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransactionCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TicketId");

                    b.HasIndex("EventId");

                    b.HasIndex("EventPackageId");

                    b.HasIndex("TransactionCurrencyId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Transaction", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountMembership")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountNonReceiptable")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountReceipted")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountTax")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountTransfer")
                        .HasColumnType("money");

                    b.Property<int?>("Anonymous")
                        .HasColumnType("int");

                    b.Property<Guid?>("AppealId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Appraiser")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingCity")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingCountry")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingLine1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingLine2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingLine3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingPostalCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BillingStateorProvince")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("BookDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CcBrandCode")
                        .HasColumnType("int");

                    b.Property<bool?>("ChargeonCreate")
                        .HasColumnType("bit");

                    b.Property<string>("ChequeNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ChequeWireDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ConfigurationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConstituentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrentRetry")
                        .HasColumnType("int");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CustomerIdType")
                        .HasColumnType("int");

                    b.Property<string>("DataEntryReference")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("DataEntrySource")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateRefunded")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DepositDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DesignationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DonorCommitmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Emailaddress1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("EmployerMatches")
                        .HasColumnType("bit");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EventPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("GaAmountClaimed")
                        .HasColumnType("money");

                    b.Property<int?>("GaApplicableCode")
                        .HasColumnType("int");

                    b.Property<int?>("GaDeliveryCode")
                        .HasColumnType("int");

                    b.Property<Guid?>("GaReturnId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GiftBatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InvoiceIdentifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastFailedRetry")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("MembershipId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MembershipInstanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("NextFailedRetry")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("OriginatingCampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OwningBusinessUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PaymentProcessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PaymentTypeCode")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiptPreferenceCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("RefAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("RefAmountMembership")
                        .HasColumnType("money");

                    b.Property<decimal?>("RefAmountNonreceiptable")
                        .HasColumnType("money");

                    b.Property<decimal?>("RefAmountReceipted")
                        .HasColumnType("money");

                    b.Property<decimal?>("RefAmountTax")
                        .HasColumnType("money");

                    b.Property<DateTime?>("ReturnedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnName("StatusReason")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TaxReceiptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telephone1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telephone2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ThirdPartyReceipt")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("TransactionBatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TransactionCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TransactionDescription")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TransactionFraudCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TransactionIdentifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TransactionNumber")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<Guid?>("TransactionPaymentMethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TransactionPaymentScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TransactionResult")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TributeAcknowledgement")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("TributeCode")
                        .HasColumnType("int");

                    b.Property<Guid?>("TributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TributeMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TributeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("ValidationPerformed")
                        .HasColumnType("bit");

                    b.HasKey("TransactionId");

                    b.HasIndex("ConfigurationId");

                    b.HasIndex("EventId");

                    b.HasIndex("MembershipId");

                    b.HasIndex("MembershipInstanceId");

                    b.HasIndex("PaymentProcessorId");

                    b.HasIndex("TaxReceiptId");

                    b.HasIndex("TransactionCurrencyId");

                    b.HasIndex("TransactionPaymentMethodId");

                    b.HasIndex("TransactionPaymentScheduleId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.TransactionCurrency", b =>
                {
                    b.Property<Guid>("TransactionCurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("CurrencySymbol")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ExchangeRate")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<bool?>("IsBase")
                        .HasColumnType("bit");

                    b.Property<string>("IsoCurrencyCode")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TransactionCurrencyId");

                    b.ToTable("TransactionCurrency");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.TributeOrMemory", b =>
                {
                    b.Property<Guid>("TributeOrMemoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TributeOrMemoryTypeCode")
                        .HasColumnType("int");

                    b.HasKey("TributeOrMemoryId");

                    b.ToTable("TributeOrMemory");
                });

            modelBuilder.Entity("FundraisingandEngagement.RelatedImage", b =>
                {
                    b.Property<Guid>("RelatedImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastPublished")
                        .HasColumnType("datetime2");

                    b.Property<string>("SmallImage")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RelatedImageId");

                    b.ToTable("RelatedImage");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Account", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.TransactionCurrency", "TransactionCurrency")
                        .WithMany()
                        .HasForeignKey("TransactionCurrencyId");

                    b.HasOne("FundraisingandEngagement.Models.Entities.EventPackage", "msnfp_LastEventPackage")
                        .WithMany("Account")
                        .HasForeignKey("msnfp_LastEventPackageId")
                        .HasConstraintName("FK__Account__LastEventPackageId__0A688BB2");

                    b.HasOne("FundraisingandEngagement.Models.Entities.Transaction", "msnfp_LastTransaction")
                        .WithMany("Account")
                        .HasForeignKey("msnfp_LastTransactionId")
                        .HasConstraintName("FK__Account__LastTransactionId__0A688BB3");

                    b.HasOne("FundraisingandEngagement.Models.Entities.Membership", "msnfp_PrimaryMembership")
                        .WithMany("Account")
                        .HasForeignKey("msnfp_PrimaryMembershipId")
                        .HasConstraintName("FK__Account__PrimaryMembershipId__0A688BB4");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Configuration", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.PaymentProcessor", "PaymentProcessor")
                        .WithMany("Configuration")
                        .HasForeignKey("PaymentProcessorId")
                        .HasConstraintName("FK__Configura__Payme__5CA1C101");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Contact", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.TransactionCurrency", "TransactionCurrency")
                        .WithMany()
                        .HasForeignKey("TransactionCurrencyId");

                    b.HasOne("FundraisingandEngagement.Models.Entities.EventPackage", "msnfp_LastEventPackage")
                        .WithMany("Contact")
                        .HasForeignKey("msnfp_LastEventPackageId")
                        .HasConstraintName("FK__Contact__LastEventPackageId__0A688BB6");

                    b.HasOne("FundraisingandEngagement.Models.Entities.Transaction", "msnfp_LastTransaction")
                        .WithMany("Contact")
                        .HasForeignKey("msnfp_LastTransactionId")
                        .HasConstraintName("FK__Contact__LastTransactionId__0A688BB7");

                    b.HasOne("FundraisingandEngagement.Models.Entities.Membership", "msnfp_PrimaryMembership")
                        .WithMany("Contact")
                        .HasForeignKey("msnfp_PrimaryMembershipId")
                        .HasConstraintName("FK__Contact__PrimaryMembershipId__0A688BB8");

                    b.HasOne("FundraisingandEngagement.Models.Entities.Account", "msnfp_household")
                        .WithMany("HouseholdMember")
                        .HasForeignKey("msnfp_householdid")
                        .HasConstraintName("FK__Contact__HouseHold__0A688BB9");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Event", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.Configuration", "Configuration")
                        .WithMany("Event")
                        .HasForeignKey("ConfigurationId")
                        .HasConstraintName("FK__Event__Configura__00DF2177");

                    b.HasOne("FundraisingandEngagement.Models.Entities.Designation", "Designation")
                        .WithMany("Events")
                        .HasForeignKey("DesignationId")
                        .HasConstraintName("FK__Event__Designation");

                    b.HasOne("FundraisingandEngagement.Models.Entities.PaymentProcessor", "PaymentProcessor")
                        .WithMany()
                        .HasForeignKey("PaymentProcessorId");

                    b.HasOne("FundraisingandEngagement.Models.Entities.TransactionCurrency", "TransactionCurrency")
                        .WithMany()
                        .HasForeignKey("TransactionCurrencyId");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.EventDisclaimer", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.Event", "Event")
                        .WithMany("EventDislaimer")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__EventDisl__Event__14E61A24");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.EventDonation", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.Event", "Event")
                        .WithMany("EventDonation")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__EventDona__Event__02C769E9");

                    b.HasOne("FundraisingandEngagement.Models.Entities.TransactionCurrency", "TransactionCurrency")
                        .WithMany()
                        .HasForeignKey("TransactionCurrencyId");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.EventPackage", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.Configuration", "Configuration")
                        .WithMany("EventPackage")
                        .HasForeignKey("ConfigurationId")
                        .HasConstraintName("FK__EventPack__Confi__11158940");

                    b.HasOne("FundraisingandEngagement.Models.Entities.Event", "Event")
                        .WithMany("EventPackage")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__EventPack__Event__10216507");

                    b.HasOne("FundraisingandEngagement.Models.Entities.PaymentMethod", "Paymentmethod")
                        .WithMany("EventPackages")
                        .HasForeignKey("PaymentmethodId")
                        .HasConstraintName("FK__EventPack__Payme__1209AD79");

                    b.HasOne("FundraisingandEngagement.Models.Entities.TransactionCurrency", "TransactionCurrency")
                        .WithMany()
                        .HasForeignKey("TransactionCurrencyId");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.EventPreference", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.PreferenceCategory", "PreferenceCategory")
                        .WithMany("EventPreference")
                        .HasForeignKey("PreferenceCategoryId")
                        .HasConstraintName("FK__EventPreference__PreferenceCategory__18B6AB52");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.EventProduct", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.Event", "Event")
                        .WithMany("EventProduct")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__EventProd__Event__09746778");

                    b.HasOne("FundraisingandEngagement.Models.Entities.TransactionCurrency", "TransactionCurrency")
                        .WithMany()
                        .HasForeignKey("TransactionCurrencyId");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.EventSponsor", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.Event", "Event")
                        .WithMany("EventSponsor")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__EventSpon__Event__12FDD1B2");

                    b.HasOne("FundraisingandEngagement.Models.Entities.TransactionCurrency", "TransactionCurrency")
                        .WithMany()
                        .HasForeignKey("TransactionCurrencyId");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.EventSponsorship", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.Event", "Event")
                        .WithMany("EventSponsorship")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__EventSpon__Event__13F1F5EB");

                    b.HasOne("FundraisingandEngagement.Models.Entities.TransactionCurrency", "TransactionCurrency")
                        .WithMany()
                        .HasForeignKey("TransactionCurrencyId");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.EventTicket", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.Event", "Event")
                        .WithMany("EventTicket")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__EventTick__Event__0697FACD");

                    b.HasOne("FundraisingandEngagement.Models.Entities.TransactionCurrency", "TransactionCurrency")
                        .WithMany()
                        .HasForeignKey("TransactionCurrencyId");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Membership", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.MembershipCategory", "MembershipCategory")
                        .WithMany("Membership")
                        .HasForeignKey("MembershipCategoryId")
                        .HasConstraintName("FK__Membershi__Membe__70A8B9AE");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.MembershipCategory", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.TransactionCurrency", "TransactionCurrency")
                        .WithMany()
                        .HasForeignKey("TransactionCurrencyId");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.MembershipOrder", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.MembershipCategory", "FromMembershipCategory")
                        .WithMany("MembershipOrder")
                        .HasForeignKey("FromMembershipCategoryId")
                        .HasConstraintName("FK__Membershi__FromM__6EC0713C");

                    b.HasOne("FundraisingandEngagement.Models.Entities.MembershipGroup", "ToMembershipGroup")
                        .WithMany("MembershipOrders")
                        .HasForeignKey("ToMembershipGroupId")
                        .HasConstraintName("FK__Membershi__ToMem__6FB49575");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Note", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.BankRun", "RegardingObject")
                        .WithMany("Note")
                        .HasForeignKey("RegardingObjectId");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Payment", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.EventPackage", "EventPackage")
                        .WithMany("Payments")
                        .HasForeignKey("EventPackageId");

                    b.HasOne("FundraisingandEngagement.Models.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentMethodId");

                    b.HasOne("FundraisingandEngagement.Models.Entities.PaymentProcessor", "PaymentProcessor")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentProcessorId");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.PaymentMethod", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.PaymentProcessor", "PaymentProcessor")
                        .WithMany("PaymentMethod")
                        .HasForeignKey("PaymentProcessorId")
                        .HasConstraintName("FK__PaymentMe__Payme__56E8E7AB");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.PaymentSchedule", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.Configuration", "Configuration")
                        .WithMany("PaymentSchedule")
                        .HasForeignKey("ConfigurationId")
                        .HasConstraintName("FK__PaymentSc__Confi__73852659");

                    b.HasOne("FundraisingandEngagement.Models.Entities.Event", "Event")
                        .WithMany("PaymentSchedule")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__PaymentSc__Event__756D6ECB");

                    b.HasOne("FundraisingandEngagement.Models.Entities.EventPackage", "EventPackage")
                        .WithMany("PaymentSchedule")
                        .HasForeignKey("EventPackageId")
                        .HasConstraintName("FK__PaymentSc__Event__76619304");

                    b.HasOne("FundraisingandEngagement.Models.Entities.MembershipCategory", "MembershipCategory")
                        .WithMany("PaymentSchedules")
                        .HasForeignKey("MembershipCategoryId")
                        .HasConstraintName("FK__PaymentSc_To_MembershipCategory");

                    b.HasOne("FundraisingandEngagement.Models.Entities.Membership", "Membership")
                        .WithMany("PaymentSchedules")
                        .HasForeignKey("MembershipId");

                    b.HasOne("FundraisingandEngagement.Models.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany("PaymentSchedules")
                        .HasForeignKey("PaymentMethodId")
                        .HasConstraintName("FK__PaymentSc__Payme__719CDDE7");

                    b.HasOne("FundraisingandEngagement.Models.Entities.PaymentProcessor", "PaymentProcessor")
                        .WithMany()
                        .HasForeignKey("PaymentProcessorId");

                    b.HasOne("FundraisingandEngagement.Models.Entities.TransactionCurrency", "TransactionCurrency")
                        .WithMany()
                        .HasForeignKey("TransactionCurrencyId");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Preference", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.PreferenceCategory", "PreferenceCategory")
                        .WithMany("Preference")
                        .HasForeignKey("preferencecategoryid")
                        .HasConstraintName("FK__Preference__PreferenceCategory__18B6AB51");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Product", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.Event", "Event")
                        .WithMany("Product")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__Product__EventId__078C1F06");

                    b.HasOne("FundraisingandEngagement.Models.Entities.EventPackage", "EventPackage")
                        .WithMany("Product")
                        .HasForeignKey("EventPackageId")
                        .HasConstraintName("FK__Product__EventPa__0880433F");

                    b.HasOne("FundraisingandEngagement.Models.Entities.TransactionCurrency", "TransactionCurrency")
                        .WithMany()
                        .HasForeignKey("TransactionCurrencyId");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Receipt", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.PaymentSchedule", "PaymentSchedule")
                        .WithMany("Receipt")
                        .HasForeignKey("PaymentScheduleId")
                        .HasConstraintName("FK__Receipt__Payment__7849DB76");

                    b.HasOne("FundraisingandEngagement.Models.Entities.ReceiptStack", "ReceiptStack")
                        .WithMany("Receipt")
                        .HasForeignKey("ReceiptStackId")
                        .HasConstraintName("FK__Receipt__Receipt__7755B73D");

                    b.HasOne("FundraisingandEngagement.Models.Entities.TransactionCurrency", "TransactionCurrency")
                        .WithMany()
                        .HasForeignKey("TransactionCurrencyId");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.ReceiptLog", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.ReceiptStack", "ReceiptStack")
                        .WithMany("ReceiptLog")
                        .HasForeignKey("ReceiptStackId")
                        .HasConstraintName("FK__ReceiptLo__Recei__7A3223E8");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.ReceiptStack", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.Configuration", "Configuration")
                        .WithMany("ReceiptStack")
                        .HasForeignKey("ConfigurationId")
                        .HasConstraintName("FK__ReceiptSt__Confi__7B264821");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Refund", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.TransactionCurrency", "TransactionCurrency")
                        .WithMany()
                        .HasForeignKey("TransactionCurrencyId");

                    b.HasOne("FundraisingandEngagement.Models.Entities.Transaction", "Transaction")
                        .WithMany("Refund")
                        .HasForeignKey("TransactionId")
                        .HasConstraintName("FK__Refund__Transact__7C1A6C5A");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Registration", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.Event", "Event")
                        .WithMany("Registration")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__Registrat__Event__18B6AB08");

                    b.HasOne("FundraisingandEngagement.Models.Entities.EventPackage", "EventPackage")
                        .WithMany("Registration")
                        .HasForeignKey("EventPackageId")
                        .HasConstraintName("FK__Registrat__Event__19AACF41");

                    b.HasOne("FundraisingandEngagement.Models.Entities.EventTicket", "EventTicket")
                        .WithMany("Registration")
                        .HasForeignKey("EventTicketId")
                        .HasConstraintName("FK__Registrat__Event__1B9317B3");

                    b.HasOne("FundraisingandEngagement.Models.Entities.Ticket", "Ticket")
                        .WithMany("Registration")
                        .HasForeignKey("TicketId")
                        .HasConstraintName("FK__Registrat__Ticke__1A9EF37A");

                    b.HasOne("FundraisingandEngagement.Models.Entities.TransactionCurrency", "TransactionCurrency")
                        .WithMany()
                        .HasForeignKey("TransactionCurrencyId");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Response", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.PaymentSchedule", "PaymentSchedule")
                        .WithMany("Response")
                        .HasForeignKey("PaymentScheduleId")
                        .HasConstraintName("FK__Response__Paymen__7EF6D905");

                    b.HasOne("FundraisingandEngagement.Models.Entities.Registration", "RegistrationPackage")
                        .WithMany("Response")
                        .HasForeignKey("RegistrationPackageId")
                        .HasConstraintName("FK__Response__Regist__7FEAFD3E");

                    b.HasOne("FundraisingandEngagement.Models.Entities.Transaction", "Transaction")
                        .WithMany("Response")
                        .HasForeignKey("TransactionId")
                        .HasConstraintName("FK__Response__Transa__7E02B4CC");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Sponsorship", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.Event", "Event")
                        .WithMany("SponsorshipNavigation")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__Sponsorsh__Event__15DA3E5D");

                    b.HasOne("FundraisingandEngagement.Models.Entities.EventPackage", "EventPackage")
                        .WithMany("Sponsorship")
                        .HasForeignKey("EventPackageId")
                        .HasConstraintName("FK__Sponsorsh__Event__16CE6296");

                    b.HasOne("FundraisingandEngagement.Models.Entities.EventSponsor", null)
                        .WithMany("Sponsorship")
                        .HasForeignKey("EventSponsorId");

                    b.HasOne("FundraisingandEngagement.Models.Entities.EventSponsorship", "EventSponsorship")
                        .WithMany("Sponsorship")
                        .HasForeignKey("EventSponsorshipId")
                        .HasConstraintName("FK__Sponsorsh__Event__17C286CF");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.SyncLog", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.Transaction", "Transaction")
                        .WithMany("SyncLogs")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Ticket", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.Event", "Event")
                        .WithMany("Ticket")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__Ticket__EventId__0A688BB1");

                    b.HasOne("FundraisingandEngagement.Models.Entities.EventPackage", "EventPackage")
                        .WithMany("Ticket")
                        .HasForeignKey("EventPackageId")
                        .HasConstraintName("FK__Ticket__EventPac__0B5CAFEA");

                    b.HasOne("FundraisingandEngagement.Models.Entities.TransactionCurrency", "TransactionCurrency")
                        .WithMany()
                        .HasForeignKey("TransactionCurrencyId");
                });

            modelBuilder.Entity("FundraisingandEngagement.Models.Entities.Transaction", b =>
                {
                    b.HasOne("FundraisingandEngagement.Models.Entities.Configuration", "Configuration")
                        .WithMany("Transaction")
                        .HasForeignKey("ConfigurationId")
                        .HasConstraintName("FK__Transacti__Confi__625A9A57");

                    b.HasOne("FundraisingandEngagement.Models.Entities.Event", "Event")
                        .WithMany("Transaction")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__Transacti__Event__65370702");

                    b.HasOne("FundraisingandEngagement.Models.Entities.MembershipCategory", "MembershipCategory")
                        .WithMany("Transactions")
                        .HasForeignKey("MembershipId")
                        .HasConstraintName("FK__Transacti__Membe__625A9A58");

                    b.HasOne("FundraisingandEngagement.Models.Entities.Membership", "Membership")
                        .WithMany("Transactions")
                        .HasForeignKey("MembershipInstanceId")
                        .HasConstraintName("FK__Transacti__Membe__625A9A59");

                    b.HasOne("FundraisingandEngagement.Models.Entities.PaymentProcessor", "PaymentProcessor")
                        .WithMany()
                        .HasForeignKey("PaymentProcessorId");

                    b.HasOne("FundraisingandEngagement.Models.Entities.Receipt", "TaxReceipt")
                        .WithMany()
                        .HasForeignKey("TaxReceiptId");

                    b.HasOne("FundraisingandEngagement.Models.Entities.TransactionCurrency", "TransactionCurrency")
                        .WithMany("Transactions")
                        .HasForeignKey("TransactionCurrencyId");

                    b.HasOne("FundraisingandEngagement.Models.Entities.PaymentMethod", "TransactionPaymentMethod")
                        .WithMany("Transactions")
                        .HasForeignKey("TransactionPaymentMethodId")
                        .HasConstraintName("FK__Transacti__trans__6166761E");

                    b.HasOne("FundraisingandEngagement.Models.Entities.PaymentSchedule", "TransactionPaymentSchedule")
                        .WithMany("Transaction")
                        .HasForeignKey("TransactionPaymentScheduleId")
                        .HasConstraintName("FK__Transacti__trans__634EBE90");
                });
#pragma warning restore 612, 618
        }
    }
}
